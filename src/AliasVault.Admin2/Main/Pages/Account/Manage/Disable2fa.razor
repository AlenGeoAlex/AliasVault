@page "/account/manage/Disable2fa"

@using Microsoft.AspNetCore.Identity

@inject UserManager<AdminUser> UserManager
@inject ILogger<Disable2fa> Logger

<PageTitleLayout>Disable two-factor authentication (2FA)</PageTitleLayout>

<h3>Disable two-factor authentication (2FA)</h3>

<div class="alert alert-warning" role="alert">
    <p>
        <strong>This action only disables 2FA.</strong>
    </p>
    <p>
        Disabling 2FA does not change the keys used in authenticator apps. If you wish to change the key
        used in an authenticator app you should <a href="account/manage/ResetAuthenticator">reset your authenticator keys.</a>
    </p>
</div>

<div>
    <form @formname="disable-2fa" @onsubmit="OnSubmitAsync" method="post">
        <AntiforgeryToken/>
        <button class="btn btn-danger" type="submit">Disable 2FA</button>
    </form>
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        if (!await UserManager.GetTwoFactorEnabledAsync(UserService.User()))
        {
            throw new InvalidOperationException("Cannot disable 2FA for user as it's not currently enabled.");
        }
    }

    private async Task OnSubmitAsync()
    {
        var disable2faResult = await UserManager.SetTwoFactorEnabledAsync(UserService.User(), false);
        if (!disable2faResult.Succeeded)
        {
            throw new InvalidOperationException("Unexpected error occurred disabling 2FA.");
        }

        var userId = await UserManager.GetUserIdAsync(UserService.User());
        Logger.LogInformation("User with ID '{UserId}' has disabled 2fa.", userId);

        // Reload current page.
        NavigationService.RedirectTo(NavigationService.Uri, forceLoad: true);
    }

}

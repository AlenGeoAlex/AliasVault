@page "/user/logout"
@inject GlobalNotificationService GlobalNotificationService

@code {
    /// <inheritdoc />
    protected override async Task OnInitializedAsync()
    {
        // Sign out the user.
        // NOTE: the try/catch below is a workaround for the issue that the sign out does not work when
        // the server session is already started.
        try
        {
            try
            {
                await SignInManager.SignOutAsync();
                GlobalNotificationService.ClearMessages();

                // Redirect to the home page with hard refresh.
                NavigationService.RedirectTo("/", true);
            }
            catch
            {
                // Hard refresh current page if sign out fails. When an interactive server session is already started
                // the sign out will fail because it tries to mutate cookies which is only possible when the server
                // session is not started yet.
                NavigationService.RedirectTo(NavigationService.Uri, true);
            }
        }
        catch
        {
            // Redirect to the home page with hard refresh.
            NavigationService.RedirectTo("/", true);
        }
    }
}

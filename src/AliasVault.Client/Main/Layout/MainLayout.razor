@inherits LayoutComponentBase
@implements IDisposable
@inject GlobalLoadingService GlobalLoadingService

<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            <ConfirmModal />
            <FullScreenLoadingIndicator @ref="LoadingIndicator" />
            <TopMenu />
            <div class="flex pt-16 overflow-hidden bg-gray-50 dark:bg-gray-900">
                <div id="main-content" class="relative w-full max-w-screen-2xl mx-auto h-full overflow-y-auto bg-gray-50 dark:bg-gray-900">
                    <main>
                        <GlobalNotificationDisplay />
                        @Body
                    </main>
                    <Footer />
                </div>
            </div>
        </Authorized>
        <NotAuthorized>
            <main>
                @Body
            </main>
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? AuthState { get; set; }

    private FullScreenLoadingIndicator LoadingIndicator = new();

    /// <inheritdoc />
    protected override void OnInitialized()
    {
        GlobalLoadingService.OnChange += OnChange;
    }

    /// <inheritdoc />
    public void Dispose()
    {
        GlobalLoadingService.OnChange -= OnChange;
    }

    private void OnChange()
    {
        if (GlobalLoadingService.IsLoading)
        {
            LoadingIndicator.Show();
        }
        else
        {
            LoadingIndicator.Hide();
        }
        StateHasChanged();
    }
}

@inject DbService DbService

<div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6">
    <div class="flex justify-between items-center mb-4">
        <h3 class="text-lg font-medium text-gray-900 dark:text-white">Default Password Generation Settings</h3>
        <button type="button" class="px-4 py-2 bg-primary-600 text-white rounded-md hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-primary-500 dark:bg-primary-700 dark:hover:bg-primary-600" @onclick="OpenSettings">
            Configure
        </button>
    </div>
    <div class="text-sm text-gray-500 dark:text-gray-400">
        Configure the default settings used when generating new passwords. These settings will be used unless overridden for specific entries.
    </div>
</div>

@if (IsSettingsVisible)
{
    <PasswordSettingsPopup
        PasswordSettings="@PasswordSettings"
        IsTemporary="false"
        OnSaveSettings="@HandlePasswordSettingsSaved"
        OnClose="@CloseSettings" />
}

@code {
    private PasswordSettings PasswordSettings { get; set; } = new();
    private bool IsSettingsVisible { get; set; }

    /// <inheritdoc />
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        PasswordSettings = DbService.Settings.PasswordSettings;
    }

    private void OpenSettings()
    {
        IsSettingsVisible = true;
    }

    private void CloseSettings()
    {
        IsSettingsVisible = false;
    }

    private void HandlePasswordSettingsSaved(PasswordSettings settings)
    {
        // The settings are already saved in the PasswordSettingsPopup component
        // We just need to update our local state
        PasswordSettings = settings;
    }
}

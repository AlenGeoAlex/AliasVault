@inject DbService DbService
@inject GlobalNotificationService GlobalNotificationService

<div class="relative p-8 bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-md mx-auto">
    <div class="text-center">
        <svg class="mx-auto animate-spin h-12 w-12 text-primary-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
            <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
        </svg>
        <div class="space-y-4">
            <h2 class="text-xl font-semibold text-gray-900 dark:text-white">Welcome to AliasVault!</h2>
            <p class="text-sm text-gray-500 dark:text-gray-400">
               Your new encrypted vault is being created. This process may take a moment. Please wait.
            </p>

            <div>
                @if (ErrorMessage.Length > 0)
                {
                    <AlertMessageError Message="@ErrorMessage" />
                }
            </div>
        </div>
    </div>
</div>

@code {
    private string ErrorMessage { get; set; } = string.Empty;

    /// <inheritdoc />
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
    }

    /// <inheritdoc />
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);

        if (firstRender)
        {
            // Start the database migration process
            await MigrateDatabase();
        }
    }

    private async Task MigrateDatabase()
    {
        // Simulate a delay.
        await Task.Delay(3000);

        // Migrate the database
        if (await DbService.MigrateDatabaseAsync())
        {
            // Migration successful
            GlobalNotificationService.AddSuccessMessage("Vault successfully created.", true);
        }
        else
        {
            // Migration failed
            ErrorMessage = "Vault creation failed. Please try again or contact support.";
        }

        StateHasChanged();
    }
}

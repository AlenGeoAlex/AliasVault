@page "/user/login"
@inherits AliasVault.WebApp.Auth.Pages.Base.LoginBase
@layout Auth.Layout.MainLayout
@attribute [AllowAnonymous]
@using AliasVault.Shared.Models
@using AliasVault.WebApp.Auth.Components

<h2 class="text-2xl font-bold text-gray-900 dark:text-white">
    Sign in to AliasVault
</h2>

<FullScreenLoadingIndicator @ref="LoadingIndicator" />
<ServerValidationErrors @ref="ServerValidationErrors" />

<EditForm Model="LoginModel" OnValidSubmit="HandleLogin" class="mt-8 space-y-6">
    <DataAnnotationsValidator/>
    <div>
        <label asp-for="Input.Email" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Your email</label>
        <InputTextField id="email" @bind-Value="LoginModel.Email" placeholder="name@company.com" />
        <ValidationMessage For="() => LoginModel.Email"/>
    </div>
    <div>
        <label asp-for="Input.Password" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">Your password</label>
        <InputTextField id="password" @bind-Value="LoginModel.Password" type="password" placeholder="••••••••" />
        <ValidationMessage For="() => LoginModel.Password"/>
    </div>

    <div class="flex items-start">
        <div class="flex items-center h-5">
            <input id="remember" aria-describedby="remember" name="remember" type="checkbox" class="w-4 h-4 border-gray-300 rounded bg-gray-50 focus:ring-3 focus:ring-primary-300 dark:focus:ring-primary-600 dark:ring-offset-gray-800 dark:bg-gray-700 dark:border-gray-600">
        </div>
        <div class="ml-3 text-sm">
            <label for="remember" class="font-medium text-gray-900 dark:text-white">Remember me</label>
        </div>
        <a href="/user/forgot-password" class="ml-auto text-sm text-primary-700 hover:underline dark:text-primary-500">Lost Password?</a>
    </div>

    <button type="submit" class="w-full px-5 py-3 text-base font-medium text-center text-white bg-primary-700 rounded-lg hover:bg-primary-800 focus:ring-4 focus:ring-primary-300 sm:w-auto dark:bg-primary-600 dark:hover:bg-primary-700 dark:focus:ring-primary-800">Login to your account</button>
    <div class="text-sm font-medium text-gray-500 dark:text-gray-400">
        Not registered? <a href="/user/register" class="text-primary-700 hover:underline dark:text-primary-500">Create account</a>
    </div>
</EditForm>

@code {
    private readonly LoginModel LoginModel = new();
    private FullScreenLoadingIndicator LoadingIndicator = new();
    private ServerValidationErrors ServerValidationErrors = new();

    /// <inheritdoc />
    protected override async Task OnInitializedAsync()
    {
        await AuthStateProvider.GetAuthenticationStateAsync();
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        if (authState.User.Identity?.IsAuthenticated == true) {
            // Already authenticated, redirect to home page.a
            NavigationManager.NavigateTo("/");
        }
    }

    private async Task HandleLogin()
    {
        LoadingIndicator.Show();
        ServerValidationErrors.Clear();

        try
        {
            var errors = await ProcessLoginAsync(LoginModel.Email, LoginModel.Password);
            foreach (var error in errors)
            {
                ServerValidationErrors.AddError(error);
            }
        }
#if DEBUG
        catch (Exception ex)
        {
            // If in debug mode show the actual exception.
            ServerValidationErrors.AddError(ex.ToString());
        }
#else
        catch
        {
            // If in release mode show a generic error.
            ServerValidationErrors.AddError("An error occurred while processing the login request. Try again (later).");
        }
#endif
        finally
        {
            LoadingIndicator.Hide();
        }
    }
}
